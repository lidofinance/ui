name: Publish canary lido-ui-v4

on:
  push:
    branches:
      - lido-ui-v4-canary
  workflow_dispatch:

permissions:
  contents: write
  pages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    env:
      NODE_OPTIONS: --max_old_space_size=4096
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build Components
        run: yarn build

      - name: Publish to NPM
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          yarn release

      - name: Build Storybook
        run: yarn build-storybook

      # It's temporary solution in this workflow until deploy the production version
      # We need this to display the storybook on a website
      # TODO: Remove this step when the production version will be deployed
      - name: Merge Storybook builds
        run: |
          # Get the published files from the gh-pages branch (if any)
          git fetch origin gh-pages:gh-pages-temp || echo "gh-pages branch not found"
          git worktree add gh-pages-temp origin/gh-pages
          # Save the current build (v4) to a temporary folder
          mv storybook-static storybook-static-temp
          # Create a clean storybook-static directory
          mkdir -p storybook-static
          # Copy the v4 build to the nested storybook-static/v4 folder
          mkdir -p storybook-static/v4
          cp -r storybook-static-temp/* storybook-static/v4/
          # If the published files contain a main version build (v3),
          # Copy it to the root storybook-static, excluding the v4 folder to avoid overwriting the v4 build.
          if [ -d gh-pages-temp ]; then
            rsync -av --exclude 'v4' gh-pages-temp/ storybook-static/
          else
            echo "No main version found in gh-pages"
          fi

      - name: Deploy to GitHub Pages
        uses: lidofinance/github-pages-action@v1
        with:
          branch: gh-pages
          folder: storybook-static

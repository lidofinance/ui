.container {
  --local-ui-input-height: 68px;

  font-family: var(--lido-ui-font-family);
  position: relative;
  display: flex;
  align-items: stretch;
  box-sizing: border-box;
  width: 100%;
}

.input {
  @mixin font-body-large-medium;

  width: 100%;
  color: var(--lido-ui-color-text-primary);
  padding: 0;
  background: transparent;
  box-shadow: none;
  border: none;
  outline: none;
  position: relative;
  box-sizing: border-box;
  min-width: 0;
  transition: all 0.2s ease-in-out;
  height: var(--local-ui-input-height);

  &:focus {
    caret-color: var(--lido-ui-color-borders-hover);
  }

  &::placeholder {
    color: var(--lido-ui-color-text-tertiary);
    transition: all 0.2s ease-in-out;
  }

  &:disabled {
    color: var(--lido-ui-color-text-quaternary);
  }

  &:disabled::placeholder {
    color: var(--lido-ui-color-text-quaternary);
    position: relative;
  }
}

.size--l {
  --local-ui-input-height: 68px;
}

.size--m {
  --local-ui-input-height: 60px;
}

.size--s {
  --local-ui-input-height: 48px;
}

.inputContent {
  position: relative;
  display: flex;
  align-items: center;
  flex-grow: 1;
  gap: 8px;
  box-sizing: border-box;
  cursor: text;
  border: 1px solid var(--lido-ui-color-borders-default);
  transition: all 0.3s ease;
  height: var(--local-ui-input-height);
  background-color: var(--lido-ui-color-backgrounds-cards);

  &:not(.isDisabled):hover,
  &:not(.isDisabled):focus-within {
    background-color: var(--lido-ui-color-backgrounds-cards-hover);
  }

  &:not(.isDisabled, .isError):hover,
  &:not(.isDisabled, .isError):focus-within {
    border-color: var(--lido-ui-color-borders-hover);
  }
}

.isDisabled {
  border-color: var(--lido-ui-color-borders-default);
  background-color: var(--lido-ui-color-backgrounds-cards);
  color: var(--lido-ui-color-text-quaternary);
  cursor: default;

  &.withColoredIcon {
    .leftDecorator {
      opacity: 0.3;
    }
  }
}

.isError {
  border-color: var(--lido-ui-color-borders-error);

  &:hover,
  &:focus-within {
    border-color: var(--lido-ui-color-borders-error);
  }

  .rightDecoratorElement,
  .floatingLabel {
    color: var(--lido-ui-color-text-error);
  }
}

.inputContent--size-l {
  --local-ui-input-height: 68px;

  border-radius: var(--lido-ui-border-radius-34);
  padding: 18px 28px;

  &.withIcon {
    padding: 8px 28px 8px 8px;
  }

  &.withButton {
    padding: 8px 8px 8px 28px;
  }

  &.withIcon.withButton {
    padding: 8px;
  }

  .leftDecorator {
    --local-icon-size: 32px;
    --local-colored-icon-size: 52px;

    padding: 10px;
  }
}

.inputContent--size-m {
  --local-ui-input-height: 60px;

  border-radius: var(--lido-ui-border-radius-30);
  padding: 14px 24px;

  &.withIcon {
    padding: 6px 24px 6px 6px;
  }

  &.withButton {
    padding: 6px 6px 6px 24px;
  }

  &.withIcon.withButton {
    padding: 6px;
  }

  .leftDecorator {
    --local-icon-size: 32px;
    --local-colored-icon-size: 48px;

    padding: 8px;
  }
}

.inputContent--size-s {
  --local-ui-input-height: 48px;

  border-radius: var(--lido-ui-border-radius-24);
  padding: 8px 18px;

  &.withIcon {
    padding: 4px 18px 4px 4px;
  }

  &.withButton {
    padding: 4px 4px 4px 18px;
  }

  &.withIcon.withButton {
    padding: 4px;
  }

  .leftDecorator {
    --local-icon-size: 32px;
    --local-colored-icon-size: 40px;

    padding: 4px;
  }
}

.withColoredIcon {
  .leftDecorator {
    padding: 0;
  }
}

/* Floating label animation - only for inputs with withFloatingLabel */
.withFloatingLabel {
  .input {
    &:focus:not(:disabled),
    &:active:not(:disabled),
    &:not(:placeholder-shown) {
      padding-top: 15px;

      &::placeholder {
        color: transparent;
      }

      & ~ .floatingLabel {
        opacity: 1;
        top: 8px;
      }
    }
  }

  .inputWrapper:focus-within .rightDecoratorElement {
    margin-top: 15px;
    transition: margin-top 0.2s ease-in-out;
  }

  .inputWrapper:has(.input:not(:placeholder-shown)) .rightDecoratorElement {
    margin-top: 15px;
    transition: margin-top 0.2s ease-in-out;
  }
}

/* Structure components */
.inputWrapper {
  position: relative;
  display: flex;
  width: 100%;
  justify-content: space-between;
  align-items: center;
  gap: 8px;
}

.inputInnerWrapper {
  position: relative;
  flex: 1;
  width: 100%;
  min-width: 0;
}

/* Decorators */
.rightDecorator {
  display: flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
}

.rightDecoratorElement {
  @mixin font-description;

  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--lido-ui-color-text-tertiary);
  white-space: nowrap;
  text-align: right;
}

/* Icon decorator */
.leftDecorator {
  position: relative;
  display: flex;
  flex-grow: 0;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;
  cursor: inherit;

  .icon {
    width: var(--local-icon-size);
    height: var(--local-icon-size);
    pointer-events: none;
  }

  .colored {
    width: var(--local-colored-icon-size);
    height: var(--local-colored-icon-size);
  }
}

.error {
  @mixin font-description-bold;

  margin-top: 4px;
  left: 0;
  position: absolute;
  top: 100%;
  border-radius: var(--lido-ui-border-radius-34);
  padding: 6px 16px;
  white-space: nowrap;
  overflow: hidden;
  box-sizing: border-box;
  text-overflow: ellipsis;
  max-width: calc(100% + 2px);
  z-index: 3;
  background: var(--lido-ui-color-backgrounds-error);
  color: var(--lido-ui-color-text-error);
}

.floatingLabel {
  @mixin font-description;

  position: absolute;
  left: 0;
  top: 0;
  color: var(--lido-ui-color-text-tertiary);
  transition: all 0.2s ease-in-out;
  pointer-events: none;
  width: calc(100% - 24px);
  white-space: nowrap;
  overflow: hidden;
  z-index: 1;
  opacity: 0;
}

/* Remove search input browser-specific decorations */
.input[type='search']::-webkit-search-decoration,
.input[type='search']::-webkit-search-cancel-button,
.input[type='search']::-webkit-search-results-button,
.input[type='search']::-webkit-search-results-decoration {
  display: none;
}

/* Input button styles - override Button component styles for use inside Input */
.inputButton--size-l {
  --local-button-vertical-padding: 10px;
  --local-button-horizontal-padding: 20px;
  --local-button-border-radius: var(--lido-ui-border-radius-34);

  min-width: 52px;
  height: 52px;
  padding: var(--local-button-vertical-padding)
    var(--local-button-horizontal-padding);
  border-radius: var(--local-button-border-radius);
}

.inputButton--size-m {
  --local-button-vertical-padding: 8px;
  --local-button-horizontal-padding: 20px;
  --local-button-border-radius: var(--lido-ui-border-radius-30);

  min-width: 48px;
  height: 48px;
  padding: var(--local-button-vertical-padding)
    var(--local-button-horizontal-padding);
  border-radius: var(--local-button-border-radius);
}

.inputButton--size-s {
  --local-button-vertical-padding: 4px;
  --local-button-horizontal-padding: 16px;
  --local-button-border-radius: var(--lido-ui-border-radius-24);

  min-width: 40px;
  height: 40px;
  padding: var(--local-button-vertical-padding)
    var(--local-button-horizontal-padding);
  border-radius: var(--local-button-border-radius);
}

"use strict";(self.webpackChunk_lidofinance_lido_ui=self.webpackChunk_lidofinance_lido_ui||[]).push([[787],{"./packages/icons/Icon.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllIcons:()=>AllIcons,SelectedIcon:()=>SelectedIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_index_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/icons/index.tsx");const iconKeys=Object.keys(_index_js__WEBPACK_IMPORTED_MODULE_1__),GenericIcon=({color,size=24,type,...props})=>{const IconComponent=_index_js__WEBPACK_IMPORTED_MODULE_1__[type];return IconComponent?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent,{style:{fill:color||"currentColor",width:size,height:size},...props}):(console.warn(`Icon "${type}" does not exist.`),null)},__WEBPACK_DEFAULT_EXPORT__={title:"Images/Icons",component:GenericIcon,argTypes:{type:{control:"select",options:iconKeys,description:"Select an icon"},color:{control:"color",description:"Цвет иконки"},size:{control:{type:"number",min:10,max:100,step:1},description:"Size of an icon in px"}}},SelectedIcon=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(GenericIcon,{...args});SelectedIcon.args={type:iconKeys[0],color:"#000000",size:24},SelectedIcon.parameters={docs:{description:{story:"Allows you to select one icon using controls and display it."}}};const AllIcons=()=>{const iconEntries=Object.entries(_index_js__WEBPACK_IMPORTED_MODULE_1__);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"flex",flexWrap:"wrap",gap:"16px"},children:iconEntries.map((([name,IconComponent])=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{textAlign:"center",width:"100px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent,{style:{fill:"currentColor"},width:48,height:48}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{marginTop:"8px",fontSize:"12px"},children:name})]},name)))})};AllIcons.parameters={controls:{disable:!0},docs:{description:{story:"Displays all available icons in a grid view."}}};const __namedExportsOrder=["SelectedIcon","AllIcons"];SelectedIcon.parameters={...SelectedIcon.parameters,docs:{...SelectedIcon.parameters?.docs,source:{originalSource:"args => <GenericIcon {...args} />",...SelectedIcon.parameters?.docs?.source}}},AllIcons.parameters={...AllIcons.parameters,docs:{...AllIcons.parameters?.docs,source:{originalSource:"() => {\n  const iconEntries = Object.entries(components) as [IconVariants, React.FC<React.SVGProps<SVGSVGElement>>][];\n  return <div style={{\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '16px'\n  }}>\n      {iconEntries.map(([name, IconComponent]) => <div key={name} style={{\n      textAlign: 'center',\n      width: '100px'\n    }}>\n          <IconComponent style={{\n        fill: 'currentColor'\n      }} width={48} height={48} />\n          <div style={{\n        marginTop: '8px',\n        fontSize: '12px'\n      }}>{name}</div>\n        </div>)}\n    </div>;\n}",...AllIcons.parameters?.docs?.source}}}}}]);
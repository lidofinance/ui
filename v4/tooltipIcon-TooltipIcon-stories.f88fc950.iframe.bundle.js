"use strict";(self.webpackChunk_lidofinance_lido_ui=self.webpackChunk_lidofinance_lido_ui||[]).push([[914],{"./packages/tooltipIcon/TooltipIcon.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllStates:()=>AllStates,Basic:()=>Basic,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_TooltipIcon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/tooltipIcon/TooltipIcon.tsx");__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Feedback/TooltipIcon",component:_TooltipIcon__WEBPACK_IMPORTED_MODULE_1__.V,args:{content:"This is a tooltip content",position:"right",size:"M",variant:"default"},argTypes:{position:{options:["top","right","bottom","left"],control:{type:"radio"}},size:{options:["S","M"],control:{type:"radio"}},variant:{options:["default","primary"],control:{type:"radio"}},content:{control:{type:"text"}}},parameters:{layout:"centered"},tags:["autodocs"]};var Basic={},AllStates=function(){var positions=["top","right","bottom","left"];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"32px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:1,border:"1px solid #eaeaea",padding:"16px 16px 16px 60px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{children:"Variant: Default"}),["M","S"].map((function(size){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginBottom:"32px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("h3",{children:["Size: ",size]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Short Content"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"flex",gap:"32px",flexWrap:"wrap"},children:positions.map((function(position){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_TooltipIcon__WEBPACK_IMPORTED_MODULE_1__.V,{position,size,content:"Position: ".concat(position)},position)}))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Long Content"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"flex",gap:"32px",flexWrap:"wrap"},children:positions.map((function(position){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_TooltipIcon__WEBPACK_IMPORTED_MODULE_1__.V,{position,size,content:"This is a tooltip with very long content that will be wrapped to multiple lines to demonstrate how the tooltip handles long text content."},position)}))})]})]})]},size)}))]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:1,border:"1px solid #eaeaea",padding:"16px 16px 16px 60px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{children:"Variant: Primary"}),["M","S"].map((function(size){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginBottom:"32px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("h3",{children:["Size: ",size]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Short Content"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"flex",gap:"32px",flexWrap:"wrap"},children:positions.map((function(position){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_TooltipIcon__WEBPACK_IMPORTED_MODULE_1__.V,{position,size,content:"Position: ".concat(position)},position)}))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Long Content"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"flex",gap:"32px",flexWrap:"wrap"},children:positions.map((function(position){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_TooltipIcon__WEBPACK_IMPORTED_MODULE_1__.V,{position,size,content:"This is a tooltip with very long content that will be wrapped to multiple lines to demonstrate how the tooltip handles long text content."},position)}))})]})]})]},size)}))]})]})};AllStates.parameters={controls:{disable:!0},docs:{description:{story:"Displays TooltipIcon states organized in 2 columns by variant. Within each variant, examples are grouped by size and content length."}}},Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{}",...Basic.parameters?.docs?.source}}},AllStates.parameters={...AllStates.parameters,docs:{...AllStates.parameters?.docs,source:{originalSource:"() => {\n  const positions: TooltipIconProps['position'][] = ['top', 'right', 'bottom', 'left'];\n  return <div style={{\n    display: 'flex',\n    gap: '32px'\n  }}>\n      <div style={{\n      flex: 1,\n      border: '1px solid #eaeaea',\n      padding: '16px 16px 16px 60px'\n    }}>\n        <h2>Variant: Default</h2>\n        {(['M', 'S'] as TooltipIconSize[]).map(size => <div key={size} style={{\n        marginBottom: '32px'\n      }}>\n            <h3>Size: {size}</h3>\n            <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '16px'\n        }}>\n              <div style={{\n            padding: '16px'\n          }}>\n                <h3>Short Content</h3>\n                <div style={{\n              display: 'flex',\n              gap: '32px',\n              flexWrap: 'wrap'\n            }}>\n                  {positions.map(position => <TooltipIcon key={position} position={position} size={size} content={`Position: ${position}`} />)}\n                </div>\n              </div>\n              <div style={{\n            padding: '16px'\n          }}>\n                <h3>Long Content</h3>\n                <div style={{\n              display: 'flex',\n              gap: '32px',\n              flexWrap: 'wrap'\n            }}>\n                  {positions.map(position => <TooltipIcon key={position} position={position} size={size} content='This is a tooltip with very long content that will be wrapped to multiple lines to demonstrate how the tooltip handles long text content.' />)}\n                </div>\n              </div>\n            </div>\n          </div>)}\n      </div>\n      <div style={{\n      flex: 1,\n      border: '1px solid #eaeaea',\n      padding: '16px 16px 16px 60px'\n    }}>\n        <h2>Variant: Primary</h2>\n        {(['M', 'S'] as TooltipIconSize[]).map(size => <div key={size} style={{\n        marginBottom: '32px'\n      }}>\n            <h3>Size: {size}</h3>\n            <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '16px'\n        }}>\n              <div style={{\n            padding: '16px'\n          }}>\n                <h3>Short Content</h3>\n                <div style={{\n              display: 'flex',\n              gap: '32px',\n              flexWrap: 'wrap'\n            }}>\n                  {positions.map(position => <TooltipIcon key={position} position={position} size={size} content={`Position: ${position}`} />)}\n                </div>\n              </div>\n              <div style={{\n            padding: '16px'\n          }}>\n                <h3>Long Content</h3>\n                <div style={{\n              display: 'flex',\n              gap: '32px',\n              flexWrap: 'wrap'\n            }}>\n                  {positions.map(position => <TooltipIcon key={position} position={position} size={size} content='This is a tooltip with very long content that will be wrapped to multiple lines to demonstrate how the tooltip handles long text content.' />)}\n                </div>\n              </div>\n            </div>\n          </div>)}\n      </div>\n    </div>;\n}",...AllStates.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","AllStates"]}}]);
"use strict";(self.webpackChunk_lidofinance_lido_ui=self.webpackChunk_lidofinance_lido_ui||[]).push([[344],{"./packages/button/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllStates:()=>AllStates,Basic:()=>Basic,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_Button__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/button/Button.tsx"),_icons__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/icons/index.tsx");const __WEBPACK_DEFAULT_EXPORT__={component:_Button__WEBPACK_IMPORTED_MODULE_1__.$,title:"Buttons/Button",args:{children:"Text",color:"default",size:"l",shape:"oval",textStyle:"semibold",disabled:!1,icon:!1,loading:!1,withArrow:!1,loaderVariant:"transparent"},argTypes:{onClick:{action:"clicked"},color:{options:["default","secondary","outline","success","transparent"],control:{type:"radio"}},size:{options:["s","m","l","xl","xxl"],control:{type:"radio"}},shape:{options:["oval","circle"],control:{type:"radio"}},textStyle:{options:["normal","semibold","subhead","description"],control:{type:"radio"}},loaderVariant:{options:["transparent","opaque"],control:{type:"radio"}},loading:{control:{type:"boolean"}},icon:{control:{type:"boolean"}},withArrow:{control:{type:"boolean"}}},decorators:[(Story,context)=>{const icon=context.args.icon?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_icons__WEBPACK_IMPORTED_MODULE_2__.Eth,{}):null;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Story,{...context,args:{...context.args,icon}})}],tags:["autodocs"]},Basic=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_1__.$,{...props}),AllStates=()=>{const colors=["default","secondary","outline","success","transparent"],textStyles=["normal","semibold","subhead","description"];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"grid",gridTemplateColumns:"repeat(auto-fit, minmax(300px, 1fr))",gap:"32px"},children:["s","m","l","xl"].map((size=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"16px",border:"1px solid #eaeaea"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("h3",{children:["Size: ",size]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:colors.map((color=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginBottom:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("h5",{children:["Color: ",color]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"flex",gap:"8px",flexWrap:"wrap"},children:textStyles.map((textStyle=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_1__.$,{color,size,shape:"oval",textStyle,disabled:!1,icon:void 0,withArrow:!1,loading:!1,loaderVariant:"transparent",children:textStyle},`oval-${size}-${color}-${textStyle}`)))})]},color)))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginBottom:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Shape: Circle"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"flex",gap:"8px",flexWrap:"wrap"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_1__.$,{color:"default",size,shape:"circle",textStyle:"normal",disabled:!1,icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_icons__WEBPACK_IMPORTED_MODULE_2__.Eth,{}),withArrow:!1,loading:!1,loaderVariant:"transparent",children:"Circle"},`circle-${size}`)})]})]},size)))})};AllStates.parameters={controls:{disable:!0},docs:{description:{story:"Displays all possible Button states for easy review."}}};const __namedExportsOrder=["Basic","AllStates"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"props => <Button {...props} />",...Basic.parameters?.docs?.source}}},AllStates.parameters={...AllStates.parameters,docs:{...AllStates.parameters?.docs,source:{originalSource:"() => {\n  const colors: ButtonProps['color'][] = ['default', 'secondary', 'outline', 'success', 'transparent'];\n  const sizes: ButtonProps['size'][] = ['s', 'm', 'l', 'xl'];\n  const textStyles: ButtonProps['textStyle'][] = ['normal', 'semibold', 'subhead', 'description'];\n  const gridContainerStyle: React.CSSProperties = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n    gap: '32px'\n  };\n  return <div style={gridContainerStyle}>\n      {sizes.map(size => <div key={size} style={{\n      padding: '16px',\n      border: '1px solid #eaeaea'\n    }}>\n          <h3>Size: {size}</h3>\n\n          <div>\n            {colors.map(color => <div key={color} style={{\n          marginBottom: '16px'\n        }}>\n                <h5>Color: {color}</h5>\n                <div style={{\n            display: 'flex',\n            gap: '8px',\n            flexWrap: 'wrap'\n          }}>\n                  {textStyles.map(textStyle => <Button key={`oval-${size}-${color}-${textStyle}`} color={color} size={size} shape='oval' textStyle={textStyle} disabled={false} icon={undefined} withArrow={false} loading={false} loaderVariant='transparent'>\n                      {textStyle}\n                    </Button>)}\n                </div>\n              </div>)}\n          </div>\n\n          <div style={{\n        marginBottom: '16px'\n      }}>\n            <h5>Shape: Circle</h5>\n            <div style={{\n          display: 'flex',\n          gap: '8px',\n          flexWrap: 'wrap'\n        }}>\n              <Button key={`circle-${size}`} color='default' size={size} shape='circle' textStyle='normal' disabled={false} icon={<Eth />} withArrow={false} loading={false} loaderVariant='transparent'>\n                Circle\n              </Button>\n            </div>\n          </div>\n        </div>)}\n    </div>;\n}",...AllStates.parameters?.docs?.source}}}}}]);
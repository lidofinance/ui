"use strict";(self.webpackChunk_lidofinance_lido_ui=self.webpackChunk_lidofinance_lido_ui||[]).push([[610],{"./packages/checkbox/Checkbox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllStates:()=>AllStates,Basic:()=>Basic,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/checkbox/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Controls/Checkbox",component:___WEBPACK_IMPORTED_MODULE_1__.S,parameters:{layout:"centered"},args:{children:"Checkbox text",disabled:!1,variant:"accent",size:"s"},argTypes:{variant:{options:["accent","primary"],control:{type:"radio"}},size:{options:["xs","s","m","l"],control:{type:"radio"}},disabled:{control:{type:"boolean"}},children:{control:{type:"text"}}},tags:["autodocs"]},Basic={},AllStates=()=>{const variants=["accent","primary"],disabledStates=[!1,!0],labelStates=[!0,!1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"grid",gridTemplateColumns:"repeat(auto-fit, minmax(300px, 1fr))",gap:"32px"},children:["xs","s","m","l"].map((size=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"16px",border:"1px solid #eaeaea",borderRadius:"4px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("h3",{children:["Size: ",size.toUpperCase()]}),variants.map((variant=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginBottom:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("h4",{children:["Variant: ",variant.charAt(0).toUpperCase()+variant.slice(1)]}),disabledStates.map((disabled=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginBottom:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("h5",{style:{opacity:.7,fontSize:"20px",margin:"5px 0"},children:["Disabled: ",disabled.toString()]}),labelStates.map((hasLabel=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginBottom:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("h5",{style:{opacity:.7,fontSize:"14px",margin:"5px 0"},children:["Label: ",hasLabel?"Yes":"No"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"16px",flexWrap:"wrap",alignItems:"center"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.S,{variant,size,disabled,checked:!0,style:{display:"flex",alignItems:"center"},children:hasLabel?"Checkbox Label":""},`${size}-${variant}-${disabled}-${hasLabel}-checked`),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.S,{variant,size,disabled,checked:!1,style:{display:"flex",alignItems:"center"},children:hasLabel?"Checkbox Label":""},`${size}-${variant}-${disabled}-${hasLabel}-unchecked`)]})]},hasLabel.toString())))]},disabled.toString())))]},variant)))]},size)))})};AllStates.parameters={controls:{disable:!0},docs:{description:{story:"Displays all possible Checkbox states for easy review."}}};const __namedExportsOrder=["Basic","AllStates"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{}",...Basic.parameters?.docs?.source}}},AllStates.parameters={...AllStates.parameters,docs:{...AllStates.parameters?.docs,source:{originalSource:"() => {\n  const variants: CheckboxVariant[] = ['accent', 'primary'];\n  const sizes: CheckboxSize[] = ['xs', 's', 'm', 'l'];\n  const disabledStates: boolean[] = [false, true];\n  const labelStates: boolean[] = [true, false];\n  const gridContainerStyle: React.CSSProperties = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n    gap: '32px'\n  };\n  return <div style={gridContainerStyle}>\n      {sizes.map(size => <div key={size} style={{\n      padding: '16px',\n      border: '1px solid #eaeaea',\n      borderRadius: '4px'\n    }}>\n          <h3>Size: {size.toUpperCase()}</h3>\n          {variants.map(variant => <div key={variant} style={{\n        marginBottom: '16px'\n      }}>\n              <h4>\n                Variant: {variant.charAt(0).toUpperCase() + variant.slice(1)}\n              </h4>\n              {disabledStates.map(disabled => <div key={disabled.toString()} style={{\n          marginBottom: '16px'\n        }}>\n                  <h5 style={{\n            opacity: 0.7,\n            fontSize: '20px',\n            margin: '5px 0'\n          }}>\n                    Disabled: {disabled.toString()}\n                  </h5>\n                  {labelStates.map(hasLabel => <div key={hasLabel.toString()} style={{\n            marginBottom: '16px'\n          }}>\n                      <h5 style={{\n              opacity: 0.7,\n              fontSize: '14px',\n              margin: '5px 0'\n            }}>\n                        Label: {hasLabel ? 'Yes' : 'No'}\n                      </h5>\n                      <div style={{\n              display: 'flex',\n              gap: '16px',\n              flexWrap: 'wrap',\n              alignItems: 'center'\n            }}>\n                        <Checkbox key={`${size}-${variant}-${disabled}-${hasLabel}-checked`} variant={variant} size={size} disabled={disabled} checked={true} style={{\n                display: 'flex',\n                alignItems: 'center'\n              }}>\n                          {hasLabel ? 'Checkbox Label' : ''}\n                        </Checkbox>\n                        <Checkbox key={`${size}-${variant}-${disabled}-${hasLabel}-unchecked`} variant={variant} size={size} disabled={disabled} checked={false} style={{\n                display: 'flex',\n                alignItems: 'center'\n              }}>\n                          {hasLabel ? 'Checkbox Label' : ''}\n                        </Checkbox>\n                      </div>\n                    </div>)}\n                </div>)}\n            </div>)}\n        </div>)}\n    </div>;\n}",...AllStates.parameters?.docs?.source}}}}}]);
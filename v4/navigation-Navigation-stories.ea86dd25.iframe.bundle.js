"use strict";(self.webpackChunk_lidofinance_lido_ui=self.webpackChunk_lidofinance_lido_ui||[]).push([[120],{"./packages/navigation/Navigation.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllStates:()=>AllStates,Basic:()=>Basic,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/navigation/index.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const __WEBPACK_DEFAULT_EXPORT__={component:___WEBPACK_IMPORTED_MODULE_1__.D,title:"Buttons/NavigationButton",args:{variant:"left",href:"",disabled:!1},argTypes:{variant:{options:["right","left","down"],control:{type:"radio"}},color:{options:["default","transparent"],control:{type:"radio"}},onClick:{action:"clicked"}}};var Basic=function(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.D,function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}({},props))},AllStates=function(){var colors=["default","transparent"],disabledStates=[!1,!0];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"grid",gridTemplateColumns:"repeat(auto-fit, minmax(300px, 1fr))",gap:"24px"},children:["left","right","down"].map((function(variant){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"16px",border:"1px solid #eaeaea",borderRadius:"4px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("h3",{children:["Variant: ",variant.charAt(0).toUpperCase()+variant.slice(1)]}),colors.map((function(color){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginBottom:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("h4",{children:["Color: ",color.charAt(0).toUpperCase()+color.slice(1)]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"flex",gap:"16px",flexWrap:"wrap"},children:disabledStates.map((function(disabled){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.D,{variant,href:"#",color,disabled,children:disabled?"Disabled":"Enabled"},"".concat(variant,"-").concat(color,"-").concat(disabled))}))})]},color)}))]},variant)}))})};AllStates.parameters={controls:{disable:!0},docs:{description:{story:"Displays all possible Navigation Button states for an easy overview."}}},Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"props => <NavigationButton {...props} />",...Basic.parameters?.docs?.source}}},AllStates.parameters={...AllStates.parameters,docs:{...AllStates.parameters?.docs,source:{originalSource:"() => {\n  const variants: NavigationButtonVariant[] = ['left', 'right', 'down'];\n  const colors: ButtonColor[] = ['default', 'transparent'];\n  const disabledStates: boolean[] = [false, true];\n  const gridContainerStyle: React.CSSProperties = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n    gap: '24px'\n  };\n  return <div style={gridContainerStyle}>\n      {variants.map(variant => <div key={variant} style={{\n      padding: '16px',\n      border: '1px solid #eaeaea',\n      borderRadius: '4px'\n    }}>\n          <h3>Variant: {variant.charAt(0).toUpperCase() + variant.slice(1)}</h3>\n          {colors.map(color => <div key={color} style={{\n        marginBottom: '16px'\n      }}>\n              <h4>Color: {color.charAt(0).toUpperCase() + color.slice(1)}</h4>\n              <div style={{\n          display: 'flex',\n          gap: '16px',\n          flexWrap: 'wrap'\n        }}>\n                {disabledStates.map(disabled => <NavigationButton key={`${variant}-${color}-${disabled}`} variant={variant} href='#' color={color as NavigaitonButtonColor}\n          // this error is OK\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          disabled={disabled}>\n                    {disabled ? 'Disabled' : 'Enabled'}\n                  </NavigationButton>)}\n              </div>\n            </div>)}\n        </div>)}\n    </div>;\n}",...AllStates.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","AllStates"]}}]);
"use strict";(self.webpackChunk_lidofinance_lido_ui=self.webpackChunk_lidofinance_lido_ui||[]).push([[874],{"./packages/input/Input.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllStates:()=>AllStates,Base:()=>Base,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_Input__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/input/Input.tsx"),_icons__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/icons/index.tsx");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}const __WEBPACK_DEFAULT_EXPORT__={title:"Controls/Input",component:_Input__WEBPACK_IMPORTED_MODULE_1__.p,tags:["autodocs"],args:{placeholder:"Placeholder text",size:"l",type:"text",error:"",disabled:!1,isLoading:!1,fullwidth:!1,rightDecorator:void 0,rightDecoratorType:"element",leftDecorator:void 0},argTypes:{onChange:{action:"changed"},onFocus:{action:"focused"},onBlur:{action:"blurred"},size:{options:["m","l","xl"],control:{type:"radio"}},type:{options:["text","email","password","search","url","tel","number"],control:{type:"radio"}},rightDecoratorType:{options:["element","text","button"],control:{type:"radio"}},disabled:{control:{type:"boolean"}},isLoading:{control:{type:"boolean"}},fullwidth:{control:{type:"boolean"}}},parameters:{layout:"centered"}};var Base={args:{placeholder:"Enter text"}},AllStates=function(){var defaultStates=[{props:{placeholder:"Default input"},title:"Default"},{props:{placeholder:"Input with error border",error:""}},{props:{placeholder:"Input with error",error:"Error message"},style:{marginBottom:"25px"}},{props:{placeholder:"Disabled input",disabled:!0}},{props:{placeholder:"Disabled input with button",disabled:!0,rightDecorator:{children:"Click me",onClick:function(){return console.log("Button clicked")},withArrow:!0},rightDecoratorType:"button"}},{props:{placeholder:"Loading input",isLoading:!0}}],withLabelStates=[{props:{placeholder:"Enter value"},title:"Input with label and placeholder (not supported for size m)"}],withRightIconStates=[{props:{placeholder:"Input with right icon",rightDecorator:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_icons__WEBPACK_IMPORTED_MODULE_2__.Eth,{width:34,height:34}),rightDecoratorType:"element"},title:"Right decorator icon"}],withLeftIconStates=[{props:{placeholder:"Input with left icon",leftDecorator:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_icons__WEBPACK_IMPORTED_MODULE_2__.Eth,{width:24,height:24})},title:"Left decorator icon"}],withRightTextStates=[{props:{placeholder:"0.00",rightDecorator:"Sample Text",rightDecoratorType:"text"},title:"With right decorator text"}],typeStates=[{props:{type:"text",placeholder:"text"}},{props:{type:"text",placeholder:"Enter your name",value:"John Doe"},style:{marginBottom:"24px"},title:"Types"},{props:{type:"email",placeholder:"email",validation:{required:!0,email:!0,trigger:"onChange"}}},{props:{type:"email",placeholder:"Enter your email",value:"john@example.com",validation:{required:!0,email:!0,trigger:"onChange"}},style:{marginBottom:"24px"}},{props:{type:"password",placeholder:"password",validation:{required:!0,minLength:8,customRules:[{validate:function(value){return/[A-Z]/.test(value)},message:"Must contain uppercase letter"},{validate:function(value){return/[0-9]/.test(value)},message:"Must contain number"},{validate:function(value){return/[!@#$%^&*]/.test(value)},message:"Must contain special character"}],trigger:"onBlur"}}},{props:{type:"password",placeholder:"Enter password",value:"Password123!",validation:{required:!0,minLength:8,customRules:[{validate:function(value){return/[A-Z]/.test(value)},message:"Must contain uppercase letter"},{validate:function(value){return/[0-9]/.test(value)},message:"Must contain number"},{validate:function(value){return/[!@#$%^&*]/.test(value)},message:"Must contain special character"}],trigger:"onBlur"}},style:{marginBottom:"24px"}},{props:{type:"search",placeholder:"search"}},{props:{type:"search",placeholder:"Search...",value:"ethereum"},style:{marginBottom:"24px"}},{props:{type:"url",placeholder:"url",validation:{required:!0,url:!0,trigger:"onBlur"}}},{props:{type:"url",placeholder:"Enter URL",value:"https://lido.fi",validation:{required:!0,url:!0,trigger:"onBlur"}},style:{marginBottom:"24px"}},{props:{type:"tel",placeholder:"tel",validation:{required:!0,tel:!0,trigger:"onChange"}}},{props:{type:"tel",placeholder:"Enter phone",value:"+1234567890",validation:{required:!0,tel:!0,trigger:"onChange"}},style:{marginBottom:"24px"}},{props:{type:"number",placeholder:"number",validation:{required:!0,min:0,max:1e3,trigger:"onChange"}}},{props:{type:"number",placeholder:"Enter amount",value:"123.45",validation:{required:!0,min:0,max:1e3,trigger:"onChange"}}}];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"grid",gridTemplateColumns:"repeat(auto-fit, minmax(300px, 1fr))",gap:"32px"},children:["m","l","xl"].map((function(size){var withButtonStates=[{props:{placeholder:"Input with button",rightDecorator:{children:"Click me",onClick:function(){return console.log("Button clicked")},withArrow:["l","xl"].includes(size)},rightDecoratorType:"button"},title:"Input with button"}];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"16px",border:"1px solid #eaeaea"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("h3",{style:{marginBottom:"30px"},children:["Size: ",size]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"flex",flexDirection:"column",gap:"24px"},children:[defaultStates,"m"!==size?withLabelStates:null,withButtonStates,withRightIconStates,withLeftIconStates,withRightTextStates,typeStates].filter((function(group){return Boolean(group)})).map((function(stateGroup,groupIndex){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Types"===stateGroup[0].title&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{style:{marginBottom:"4px"},children:stateGroup[0].title}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"flex",flexDirection:"column",gap:"16px"},children:stateGroup.map((function(param,index){var props=param.props,style=param.style;return"text"===props.rightDecoratorType&&"xl"!==size?null:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Input__WEBPACK_IMPORTED_MODULE_1__.p,_object_spread({size},props))},index)}))})]},groupIndex)}))})]},size)}))})};AllStates.parameters={controls:{disable:!0},docs:{description:{story:"Displays all possible Input states for easy review."}}},Base.parameters={...Base.parameters,docs:{...Base.parameters?.docs,source:{originalSource:"{\n  args: {\n    placeholder: 'Enter text'\n  }\n}",...Base.parameters?.docs?.source}}},AllStates.parameters={...AllStates.parameters,docs:{...AllStates.parameters?.docs,source:{originalSource:"() => {\n  const sizes = ['m', 'l', 'xl'] as const;\n  const defaultStates: InputState[] = [{\n    props: {\n      placeholder: 'Default input'\n    },\n    title: 'Default'\n  }, {\n    props: {\n      placeholder: 'Input with error border',\n      error: ''\n    }\n  }, {\n    props: {\n      placeholder: 'Input with error',\n      error: 'Error message'\n    },\n    style: {\n      marginBottom: '25px'\n    }\n  }, {\n    props: {\n      placeholder: 'Disabled input',\n      disabled: true\n    }\n  }, {\n    props: {\n      placeholder: 'Disabled input with button',\n      disabled: true,\n      rightDecorator: {\n        children: 'Click me',\n        onClick: () => console.log('Button clicked'),\n        withArrow: true\n      },\n      rightDecoratorType: 'button'\n    }\n  }, {\n    props: {\n      placeholder: 'Loading input',\n      isLoading: true\n    }\n  }];\n  const withLabelStates: InputState[] = [{\n    props: {\n      placeholder: 'Enter value'\n    },\n    title: 'Input with label and placeholder (not supported for size m)'\n  }];\n  const withRightIconStates: InputState[] = [{\n    props: {\n      placeholder: 'Input with right icon',\n      rightDecorator: <Eth width={34} height={34} />,\n      rightDecoratorType: 'element'\n    },\n    title: 'Right decorator icon'\n  }];\n  const withLeftIconStates: InputState[] = [{\n    props: {\n      placeholder: 'Input with left icon',\n      leftDecorator: <Eth width={24} height={24} />\n    },\n    title: 'Left decorator icon'\n  }];\n  const withRightTextStates: InputState[] = [{\n    props: {\n      placeholder: '0.00',\n      rightDecorator: 'Sample Text',\n      rightDecoratorType: 'text'\n    },\n    title: 'With right decorator text'\n  }];\n  const typeStates: InputState[] = [{\n    props: {\n      type: 'text',\n      placeholder: 'text'\n    }\n  }, {\n    props: {\n      type: 'text',\n      placeholder: 'Enter your name',\n      value: 'John Doe'\n    },\n    style: {\n      marginBottom: '24px'\n    },\n    title: 'Types'\n  }, {\n    props: {\n      type: 'email',\n      placeholder: 'email',\n      validation: {\n        required: true,\n        email: true,\n        trigger: 'onChange'\n      }\n    }\n  }, {\n    props: {\n      type: 'email',\n      placeholder: 'Enter your email',\n      value: 'john@example.com',\n      validation: {\n        required: true,\n        email: true,\n        trigger: 'onChange'\n      }\n    },\n    style: {\n      marginBottom: '24px'\n    }\n  }, {\n    props: {\n      type: 'password',\n      placeholder: 'password',\n      validation: {\n        required: true,\n        minLength: 8,\n        customRules: [{\n          validate: (value: string) => /[A-Z]/.test(value),\n          message: 'Must contain uppercase letter'\n        }, {\n          validate: (value: string) => /[0-9]/.test(value),\n          message: 'Must contain number'\n        }, {\n          validate: (value: string) => /[!@#$%^&*]/.test(value),\n          message: 'Must contain special character'\n        }],\n        trigger: 'onBlur'\n      }\n    }\n  }, {\n    props: {\n      type: 'password',\n      placeholder: 'Enter password',\n      value: 'Password123!',\n      validation: {\n        required: true,\n        minLength: 8,\n        customRules: [{\n          validate: (value: string) => /[A-Z]/.test(value),\n          message: 'Must contain uppercase letter'\n        }, {\n          validate: (value: string) => /[0-9]/.test(value),\n          message: 'Must contain number'\n        }, {\n          validate: (value: string) => /[!@#$%^&*]/.test(value),\n          message: 'Must contain special character'\n        }],\n        trigger: 'onBlur'\n      }\n    },\n    style: {\n      marginBottom: '24px'\n    }\n  }, {\n    props: {\n      type: 'search',\n      placeholder: 'search'\n    }\n  }, {\n    props: {\n      type: 'search',\n      placeholder: 'Search...',\n      value: 'ethereum'\n    },\n    style: {\n      marginBottom: '24px'\n    }\n  }, {\n    props: {\n      type: 'url',\n      placeholder: 'url',\n      validation: {\n        required: true,\n        url: true,\n        trigger: 'onBlur'\n      }\n    }\n  }, {\n    props: {\n      type: 'url',\n      placeholder: 'Enter URL',\n      value: 'https://lido.fi',\n      validation: {\n        required: true,\n        url: true,\n        trigger: 'onBlur'\n      }\n    },\n    style: {\n      marginBottom: '24px'\n    }\n  }, {\n    props: {\n      type: 'tel',\n      placeholder: 'tel',\n      validation: {\n        required: true,\n        tel: true,\n        trigger: 'onChange'\n      }\n    }\n  }, {\n    props: {\n      type: 'tel',\n      placeholder: 'Enter phone',\n      value: '+1234567890',\n      validation: {\n        required: true,\n        tel: true,\n        trigger: 'onChange'\n      }\n    },\n    style: {\n      marginBottom: '24px'\n    }\n  }, {\n    props: {\n      type: 'number',\n      placeholder: 'number',\n      validation: {\n        required: true,\n        min: 0,\n        max: 1000,\n        trigger: 'onChange'\n      }\n    }\n  }, {\n    props: {\n      type: 'number',\n      placeholder: 'Enter amount',\n      value: '123.45',\n      validation: {\n        required: true,\n        min: 0,\n        max: 1000,\n        trigger: 'onChange'\n      }\n    }\n  }];\n  const gridContainerStyle: React.CSSProperties = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n    gap: '32px'\n  };\n  return <div style={gridContainerStyle}>\n      {sizes.map(size => {\n      const withButtonStates: InputState[] = [{\n        props: {\n          placeholder: 'Input with button',\n          rightDecorator: {\n            children: 'Click me',\n            onClick: () => console.log('Button clicked'),\n            withArrow: ['l', 'xl'].includes(size)\n          },\n          rightDecoratorType: 'button'\n        },\n        title: 'Input with button'\n      }];\n      return <div key={size} style={{\n        padding: '16px',\n        border: '1px solid #eaeaea'\n      }}>\n            <h3 style={{\n          marginBottom: '30px'\n        }}>Size: {size}</h3>\n            <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '24px'\n        }}>\n              {[defaultStates, size !== 'm' ? withLabelStates : null, withButtonStates, withRightIconStates, withLeftIconStates, withRightTextStates, typeStates].filter((group): group is InputState[] => Boolean(group)).map((stateGroup, groupIndex) => <div key={groupIndex}>\n                    {stateGroup[0].title === 'Types' && <h5 style={{\n              marginBottom: '4px'\n            }}>\n                        {stateGroup[0].title}\n                      </h5>}\n                    <div style={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '16px'\n            }}>\n                      {stateGroup.map(({\n                props,\n                style\n              }, index) => {\n                if (props.rightDecoratorType === 'text' && size !== 'xl') {\n                  return null;\n                }\n                return <div key={index} style={style}>\n                            <Input size={size} {...props} />\n                          </div>;\n              })}\n                    </div>\n                  </div>)}\n            </div>\n          </div>;\n    })}\n    </div>;\n}",...AllStates.parameters?.docs?.source}}};const __namedExportsOrder=["Base","AllStates"]}}]);